angular.module("fluro.socket",[]),angular.module("fluro.socket").service("FluroSocket",function(Fluro,$rootScope){var socket,currentSocketID,controller={},host=Fluro.apiURL,currentAccount="",listeners=[];return"undefined"!=typeof io&&(socket=io(host),$rootScope.$watch("user.account._id",function(){var user=$rootScope.user;user?user.account&&user.account._id?(currentAccount=user.account._id,controller.join(currentAccount)):controller.leave(currentAccount):currentAccount&&controller.leave(currentAccount)})),controller.getSocketID=function(){return currentSocketID},controller.join=function(roomName){socket&&(console.log("join",roomName),socket.on("connect",function(){currentSocketID=socket.io.engine.id,socket.emit("subscribe",{room:roomName}),_.each(listeners,function(listener){socket.on(listener)})}),socket.on("reconnect",function(){currentSocketID=socket.io.engine.id,socket.emit("subscribe",{room:roomName})}),socket.on("disconnect",function(){currentSocketID=null}))},controller.leave=function(roomName){socket&&(console.log("leave",roomName),socket.emit("unsubscribe",{room:roomName}),socket.off("connect"),socket.off("reconnect"),socket.off("disconnect"),_.each(listeners,function(listener){socket.off(listener)}))},controller.emit=function(roomName,key,data){socket.to(roomName).emit(key,data)},controller.on=function(event,callback){-1==listeners.indexOf(event)&&(listeners.push(event),console.log("Add listener",event,listeners)),socket&&socket.on(event,callback)},controller.off=function(event,callback){_.pull(listeners,event),console.log("Pull from listeners",event,listeners),socket&&socket.off(event,callback)},controller});